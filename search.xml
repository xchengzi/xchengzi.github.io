<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>javascript缓动动画js代码</title>
    <url>/2020/04/22/javascript%E7%BC%93%E5%8A%A8%E5%8A%A8%E7%94%BBjs%E4%BB%A3%E7%A0%81/</url>
    <content><![CDATA[<h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><blockquote>
<p>animate（移动对象，目标位置，回调函数）</p>
<p>animate ( obj , target , callback )</p>
</blockquote>
<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><blockquote>
<p>​            // 速度越来越慢<br>​            // 1 移动距离越来越小<br>​            // 2 设置步长 （目标位置-当前位置）/10<br>​            // 3 步长每次不一样，写在定时器里</p>
</blockquote>
<h2 id="代码部分"><a href="#代码部分" class="headerlink" title="代码部分"></a>代码部分</h2><a id="more"></a>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">function animate(obj,target,callback)&#123;</span><br><span class="line">		clearInterval(obj.timer)</span><br><span class="line">		obj.timer&#x3D;setInterval(function()&#123;</span><br><span class="line">        </span><br><span class="line">			var step&#x3D;(target-obj.offsetLeft)&#x2F;10</span><br><span class="line">			step&#x3D; step&gt;0 ? Math.ceil(step) : Math.floor(step)</span><br><span class="line">			if(obj.offsetLeft&#x3D;&#x3D;target)&#123;</span><br><span class="line">				clearInterval(obj.timer)</span><br><span class="line">&#x2F;&#x2F;				if(callback)&#123;</span><br><span class="line">&#x2F;&#x2F;					callback()</span><br><span class="line">&#x2F;&#x2F;				&#125;</span><br><span class="line">				callback&amp;&amp;callback();</span><br><span class="line">			&#125;</span><br><span class="line">			obj.style.left&#x3D;obj.offsetLeft+step+&#39;px&#39;</span><br><span class="line">		&#125;,15)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>javascript</category>
      </categories>
      <tags>
        <tag>js运动</tag>
      </tags>
  </entry>
  <entry>
    <title>进程同步、互斥、异步</title>
    <url>/2020/04/20/%E8%BF%9B%E7%A8%8B%E5%90%8C%E6%AD%A5%E3%80%81%E4%BA%92%E6%96%A5%E3%80%81%E5%BC%82%E6%AD%A5/</url>
    <content><![CDATA[<h1 id="同步、互斥、异步"><a href="#同步、互斥、异步" class="headerlink" title="同步、互斥、异步"></a>同步、互斥、异步</h1><h2 id="同步与互斥"><a href="#同步与互斥" class="headerlink" title="同步与互斥"></a>同步与互斥</h2><p>​            <strong>并发进程之间的制约关系有两种，即互斥和同步</strong></p>
<ul>
<li>互斥</li>
</ul>
<blockquote>
<p>多个并发进程之间，因竞争使用临界资源而互相排斥执行的间接制约关系，叫作互斥。</p>
</blockquote>
<ul>
<li>同步</li>
</ul>
<blockquote>
<p>在某些地方，多个并发进程需要相互等待或交换信息而产生的直接制约关系，叫做同步。</p>
</blockquote>
<a id="more"></a>

<h2 id="异步"><a href="#异步" class="headerlink" title="异步"></a>异步</h2><blockquote>
<p>异步与同步是相对的：</p>
<p>同步是顺序执行进程，执行完一个进程再执行下一个进程，需要进程之间等待、协调运行；</p>
<p>异步是进程之间彼此独立，在等待其他进程的运行时，本进程继续做自己的事，不需要等待其他进程完成后再工作。</p>
</blockquote>
]]></content>
      <categories>
        <category>操作系统原理</category>
      </categories>
      <tags>
        <tag>进程</tag>
      </tags>
  </entry>
</search>
